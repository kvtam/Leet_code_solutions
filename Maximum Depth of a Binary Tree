/*
Kyle Tam
Maximum depth of a binary tree

Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) //if root is null return 0;
            return 0;
        //search left & right nodes and make them into the root and search down
        int leftMax = maxDepth(root->left);//Search left side of the tree 
        int rightMax = maxDepth(root->right);//Search right side of the tree 
        return max(leftMax, rightMax)+1;
    }
};
